<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Object-oriented programming | kleban.page</title>
    <link>/tag/object-oriented-programming/</link>
      <atom:link href="/tag/object-oriented-programming/index.xml" rel="self" type="application/rss+xml" />
    <description>Object-oriented programming</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>uk</language><copyright>© 2021 Yurii Kleban</copyright><lastBuildDate>Sun, 18 Apr 2021 00:00:00 +0100</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Object-oriented programming</title>
      <link>/tag/object-oriented-programming/</link>
    </image>
    
    <item>
      <title>Лекція 8. Вступ до об&#39;єктно-орієнтовного програмування</title>
      <link>/courses/csharp-basics/lecture8/</link>
      <pubDate>Sun, 18 Apr 2021 00:00:00 +0100</pubDate>
      <guid>/courses/csharp-basics/lecture8/</guid>
      <description>&lt;hr&gt;
&lt;span style=&#34;float:right; opacity:0.3&#34;&gt;

  &lt;i class=&#34;fas fa-atlas fa-3x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter81&#34;&gt;8.1. Поняття об&amp;rsquo;єкта та класу. Основні елементи класу&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter82&#34;&gt;8.2. Будова класу&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#chapter821&#34;&gt;8.2.1. Поля класу&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#chapter822&#34;&gt;8.2.2. Методи класу&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#презентація&#34;&gt;Презентація&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter8task&#34;&gt;Задачі&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter8questions&#34;&gt;Контрольні запитання&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter8sources&#34;&gt;Де почитати?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter8sources&#34;&gt;Список використаних джерел&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter8additional&#34;&gt;Додаткові матеріали для завантаження&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;chapter81&#34;&gt;8.1. Поняття об&amp;rsquo;єкта та класу. Основні елементи класу&lt;/h2&gt;
&lt;p&gt;Об&amp;rsquo;єктно-орієнтоване програмування і проектування побудоване на класах. Будь-яку програмну систему, побудовану в об&amp;rsquo;єктному стилі, можна розглядати як сукупність класів, можливо, об&amp;rsquo;єднаних в проекти, простори імен, рішення, як це робиться при програмуванні у Visual Studio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Клас&lt;/strong&gt; - це шаблон, який визначає форму об&amp;rsquo;єкту. Він задає як дані, так і код, який оперує цими даними.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Об&amp;rsquo;єкти&lt;/strong&gt; - це екземпляри класу.&lt;/p&gt;
&lt;p&gt;Клас складається із:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; полів;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; властивостей;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; методів;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; подій;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; конструкторів;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; деструкторів;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; делегатів.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Елементи класу називаються членами класу.&lt;/p&gt;
&lt;p&gt;Клас оголошується за допомогою ключового слова &lt;code&gt;class&lt;/code&gt;. Синтаксис має наступний вигляд:&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-code text-success  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Лістинг 8.1. Синтаксис оголошення класу.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{csharp}&#34;&gt;  class ім’я_класу
  {
    //Оголошення полів
    доступ тип імя_змінної;
    доступ тип імя_змінної;
  
    //Оголошення методів
    доступ тип_повернення імя_метода(параметри)
    {
      тіло метода;
    }
  
    доступ тип_повернення імя_метода(параметри)
    {
      тіло метода;
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Розглянемо приклад базового створення класу &amp;ldquo;Комплексне число&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-code text-success  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Лістинг 8.2. Оголошення класу &lt;code&gt;ComplexNumber&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{csharp}&#34;&gt;  public class ComplexNumber
  {
    //Поля
    private double a;
    private double b;
  
    //Конструктор
    public ComplexNumber(double a, double b)
    {
      this.a = a;
      this.b = b;
    }
  
  //Метод
    public override string ToString()
    {
      return a + &amp;quot; + &amp;quot; + b + &amp;quot;i&amp;quot;;
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Доступ до полів, методів та інших членів класу може здійснюватися з різним рівнем доступу:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;code&gt;private&lt;/code&gt; доступний лише всередині класу (типу);&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;code&gt;protected&lt;/code&gt; доступний лише всередині класу та класів-нащадків;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;code&gt;internal&lt;/code&gt; доступний лише в межах збірки;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;code&gt;protected internal&lt;/code&gt; доступний лише в межах збірки, лише всередині класу та класів-нащадків;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;code&gt;public&lt;/code&gt; доступний для усіх.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;chapter82&#34;&gt;8.2. Будова класу&lt;/h2&gt;
&lt;h3 id=&#34;chapter821&#34;&gt;8.2.1. Поля класу&lt;/h3&gt;
&lt;p&gt;Поля класу синтаксично є звичайними змінними (об&amp;rsquo;єктами) мови. Їх опис задовольняє звичайним правилам оголошення змінних, про що детально говорилося раніше. Змістовно поля задають представлення тій самій абстракції даних, яку реалізує клас.&lt;/p&gt;
&lt;p&gt;Поля характеризують властивості об&amp;rsquo;єктів класу. Коли створюється новий об&amp;rsquo;єкт класу, то цей об&amp;rsquo;єкт є набором полів класу. Два об&amp;rsquo;єкти одного класу мають один і той же набір полів, але різняться значеннями, що зберігаються в цих полях.&lt;/p&gt;
&lt;p&gt;Синтаксис оголошення полів:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{csharp}&#34;&gt;  модифікатор_доступу тип назва;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Наприклад, оголосимо клас &lt;code&gt;Worker&lt;/code&gt;, який має 3 поля: розмір з/п, прізвище, вік.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-code text-success  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Лістинг 8.3. Оголошення полів класу &lt;code&gt;Worker&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{csharp}&#34;&gt;  class Worker
  {
    public int salary;         //Розмір з/п
    public string firstname;   //Ім&#39;я
    public string lastname;    //Прізвище
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Зараз клас працівник нагадує структуру! І це не дивно, адже клас є більш розвиненою структурую.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;chapter822&#34;&gt;8.2.2. Методи класу&lt;/h3&gt;
&lt;p&gt;Змінні(поля) екземплярів і методи - дві основні складові класів. Поки наш клас &lt;code&gt;Worker&lt;/code&gt; містить лише дані. Хоча такі класи (без методів) допустимі, більшість класів мають методи.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Методи&lt;/strong&gt; - це процедури (підпрограми), які маніпулюють даними, визначеними в класі, і у багатьох випадках забезпечують доступ до цих даних. Зазвичай різні частини програми взаємодіють з класом за допомогою його методів. Будь-який метод містить одну або декілька інструкцій.&lt;/p&gt;
&lt;p&gt;Кожен метод має ім&amp;rsquo;я, і саме це ім&amp;rsquo;я використовується для його виклику. У загальному випадку методу можна привласнити будь-яке ім&amp;rsquo;я. Але пам&amp;rsquo;ятаєте, що ім&amp;rsquo;я &lt;code&gt;Main()&lt;/code&gt; зарезервовано для методу, з якого починається виконання програми. Крім того, як імена методів не можна використовувати ключові слова С#.&lt;/p&gt;
&lt;p&gt;Імена методів супроводжуються парою круглих дужок. Наприклад, якщо метод має ім&amp;rsquo;я &lt;code&gt;GetVal&lt;/code&gt;, то в тексті буде написано &lt;code&gt;GetVal()&lt;/code&gt;. Це допомагає відрізняти імена змінних від імен методів. Формат запису методу такий:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{csharp}&#34;&gt;  доступ тип_повернення імя_метода(параметри)
  {
    тіло метода;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-code text-success  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Лістинг 8.4. Оголошення класу &lt;code&gt;Worker&lt;/code&gt;. Метод.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{csharp}&#34;&gt;  class Worker
  {
    public int salary;         //Розмір з/п
    public string firstname;   //Ім&#39;я
    public string lastname;    //Прізвище
  
    //Метод, виводить інформацію про працівника на консоль
    public void DisplayInfo()
    {
      Console.WriteLine(&amp;quot;{0} {1}, - {2} грн.&amp;quot;, lastname, firstname, salary);
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Зверніть увагу ось на що. Змінні екземпляра &lt;code&gt;salary&lt;/code&gt;, &lt;code&gt;lastname&lt;/code&gt; і &lt;code&gt;firstname&lt;/code&gt; використовуються всередині методу &lt;code&gt;DisplayInfo()&lt;/code&gt; без будь-яких атрибутів, тобто їм не передує ні ім&amp;rsquo;я об&amp;rsquo;єкту, ні оператор &amp;ldquo;крапка&amp;rdquo;. Це дуже важливий момент: якщо метод задіює змінну екземпляра, яка визначена в його класі, він робить це безпосередньо, без явного посилання на об&amp;rsquo;єкт і без оператора &amp;ldquo;крапка&amp;rdquo;. І Це логічно. Адже метод завжди викликається для деякого об&amp;rsquo;єкту конкретного класу. Таким чином, немає необхідності вказувати усередині методу об&amp;rsquo;єкт удруге. Це означає, що значення &lt;code&gt;salalry&lt;/code&gt;, &lt;code&gt;lastname&lt;/code&gt; і &lt;code&gt;firstname&lt;/code&gt; всередині методу &lt;code&gt;DisplayInfo()&lt;/code&gt; неявно вказують на копії цих змінних, що належать об&amp;rsquo;єкту, який викликає метод &lt;code&gt;DisplayInfo()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Інші приклади методів:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public int GetAge();
  protected string GetByName(string name);
  protected static bool IsEquals(Class obj1, Class obj2);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Повернення значення методом.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;У загальному випадку існує два варіанти умов для повернення з методу. Перший пов&amp;rsquo;язаний з виявленням закриваючої фігурної дужки, що позначає кінець тіла методу (як продемонстровано на прикладі методу &lt;code&gt;DisplayInfo()&lt;/code&gt;). Другий варіант полягає у виконанні інструкції return. Можливі дві форми використання інструкції &lt;code&gt;return&lt;/code&gt;: одна призначена для void-методів (які не повертають значень), а інша - для повернення значень.&lt;/p&gt;
&lt;p&gt;Негайне завершення &lt;code&gt;void&lt;/code&gt;-методу можна організувати за допомогою наступної форми інструкції &lt;code&gt;return&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public void DisplayInfo()
  {
    if(salary &amp;lt; 0)
      return;
    Console.WriteLine(&amp;quot;{0} {1}, {2}&amp;quot;, lastname, firstname, salary);
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Хоча &lt;code&gt;void&lt;/code&gt;-методи - не рідкість, більшість методів все ж повертають значення. І справді, здатність повертати значення - одна з найкорисніших якостей методу. Ми вже розглядали приклад повернення значення під час роботи з масивами. Значення, які повертаються методами, використовуються в програмуванні по різному. У одних випадках повернене значення є результатом обчислень, в інших - воно просто означає, успішно чи ні виконана певна операція, а в третіх - воно може бути кодом-стану. Методи повертають викликаючим їх процедурам, використовуючи наступну форму інструкції &lt;code&gt;return&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return значення;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Додамо до нашого класу Працівник ще кілька полів і методів.&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;
classDiagram
    Worker &lt;|-- Manager
    Worker &lt;|-- SalesManager
    Worker &lt;|-- Zebra
    Worker : +int age
    Worker : +String gender
    Worker: +isMammal()
    Worker: +mate()
    class Manager{
      +String beakColor
      +swim()
      +quack()
    }
    class SalesManager{
      -int sizeInFeet
      -canEat() 
    }
    class Zebra{
      +bool is_wild
      +run()
    }
&lt;/div&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-file-powerpoint fa-2x text-danger  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;презентація&#34;&gt;Презентація&lt;/h2&gt;
&lt;br&gt;
&lt;iframe src=&#34;https://onedrive.live.com/embed?cid=0A1340BA71B3F0AA&amp;amp;resid=A1340BA71B3F0AA%213939&amp;amp;authkey=ALTJQw7LlW8LZMk&amp;amp;em=2&amp;amp;wdAr=1.7777777777777777&#34; width=&#34;100%&#34; height=&#34;400px&#34; frameborder=&#34;0&#34;&gt;Це вбудований документ &lt;a target=&#34;_blank&#34; href=&#34;https://office.com&#34;&gt;Microsoft Office&lt;/a&gt; на платформі &lt;a target=&#34;_blank&#34; href=&#34;https://office.com/webapps&#34;&gt;Office&lt;/a&gt;.&lt;/iframe&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-list-alt fa-2x text-success  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapter8task&#34;&gt;Задачі&lt;/h2&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-question-circle text-warning fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapter8questions&#34;&gt;Контрольні запитання&lt;/h2&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;far fa-bookmark text-primary fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapter8sources&#34;&gt;Де почитати?&lt;/h2&gt;
&lt;p&gt;Книги:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Назва книги&lt;/p&gt;
&lt;p&gt;Сторінки: 1254-1284.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Блоги, статті:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://metanit.com/sharp/tutorial/3.29.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fas fa-link text-primary  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Metanit. Объектно-ориентированное программирование. Практика&lt;/a&gt; (RU)&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Відео-контент:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://metanit.com/sharp/tutorial/3.29.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fab fa-youtube text-danger  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Metanit. Объектно-ориентированное программирование. Практика&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://metanit.com/sharp/tutorial/3.29.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fab fa-microsoft text-primary  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Metanit. Объектно-ориентированное программирование. Практика&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-book text-primary fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapter8sources&#34;&gt;Список використаних джерел&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Albahari, J., &amp;amp; Albahari, B. (2012). C# 5.0 in a Nutshell, Fifth Edition. 1005 Gravenstein Highway North, Sebastopol, USA: O’Reilly Media, Inc.&lt;/li&gt;
&lt;li&gt;Cardelli, L., &amp;amp; Wegner, P. (December 1985 p.). On Understanding Types, Data Abstraction, and Polymorphism. ACM Computing 1. Surveys, 17(4), сс. 149-154. Отримано з &lt;a href=&#34;http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf&#34;&gt;http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kort, W. d. (2013). Exam Ref 70-483: Programming in C#. Sebastopol, California 95472: O’Reilly Media, Inc.&lt;/li&gt;
&lt;li&gt;MSDN. (без дати). Отримано з Microsoft Developer Network: &lt;a href=&#34;http://msdn.microsoft.com/&#34;&gt;http://msdn.microsoft.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Биллиг, А. (2005). Основы программирования на C#. Москва, Россия: НОУ ИНТУИТ.&lt;/li&gt;
&lt;li&gt;Нейгел, К. И. (2011). С# 4.0 и платформа .NET 4 для профессионалов. Москва, Россия: ООО &amp;ldquo;И.Д. Вильямс&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Павловская, Т. (2009). С#. Программирование на языке высокого уровня. Учебник для вузов. СПб, Россия: Питер.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-download fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapter8additional&#34;&gt;Додаткові матеріали для завантаження&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;del&gt;Лекція у форматі DOCX &lt;a href=&#34;&#34;&gt;
  &lt;i class=&#34;fas fa-file-word  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Завантажити&lt;/a&gt;&lt;/del&gt; (у розробці)&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Лекція у форматі PDF &lt;a href=&#34;&#34;&gt;
  &lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Завантажити&lt;/a&gt;&lt;/del&gt; (у розробці)&lt;/li&gt;
&lt;li&gt;Діаграми до лекції у форматі &lt;code&gt;
  &lt;i class=&#34;fas fa-project-diagram  pr-1 fa-fw&#34;&gt;&lt;/i&gt;draw.io&lt;/code&gt; на &lt;code&gt;
  &lt;i class=&#34;fab fa-github  pr-1 fa-fw&#34;&gt;&lt;/i&gt;github&lt;/code&gt; &lt;a href=&#34;https://github.com/kleban/csharp-basics-public/tree/master/diagrams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Перейти&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Дорогі друзі, якщо Ви помітили, що для написання матеріалів використані джерела, які я не вказав - прошу надіслати мені інформацію на пошту.
Дякую.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Лекція X. Додаткові матеріали</title>
      <link>/courses/csharp-basics/lecturex/</link>
      <pubDate>Sun, 18 Apr 2021 00:00:00 +0100</pubDate>
      <guid>/courses/csharp-basics/lecturex/</guid>
      <description>&lt;hr&gt;
&lt;span style=&#34;float:right; opacity:0.3&#34;&gt;

  &lt;i class=&#34;fas fa-atlas fa-3x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#chapterX1&#34;&gt;X.1. Основи роботи з математичними функціями у C# (&lt;code&gt;System.Math&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapterX2&#34;&gt;X.2. Генерація випадкових чисел у C# (&lt;code&gt;Random&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapterXtask&#34;&gt;Задачі&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapterXquestions&#34;&gt;Контрольні запитання&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapterXsources&#34;&gt;Де почитати?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter8sources&#34;&gt;Список використаних джерел&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#chapter8additional&#34;&gt;Додаткові матеріали для завантаження&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;chapterX1&#34;&gt;X.1. Основи роботи з математичними функціями у C# (&lt;code&gt;System.Math&lt;/code&gt;)&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-code text-success  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Лістинг 8.1. Синтаксис оголошення класу.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  class ім’я_класу
  {
    //Оголошення полів
    доступ тип імя_змінної;
    доступ тип імя_змінної;
  
    //Оголошення методів
    доступ тип_повернення імя_метода(параметри)
    {
      тіло метода;
    }
  
    доступ тип_повернення імя_метода(параметри)
    {
      тіло метода;
    }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;chapterX2&#34;&gt;X.2. Генерація випадкових чисел у C# (&lt;code&gt;Random&lt;/code&gt;)&lt;/h2&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-list-alt fa-2x text-success  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapterXtask&#34;&gt;Задачі&lt;/h2&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-question-circle text-warning fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapterXquestions&#34;&gt;Контрольні запитання&lt;/h2&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;far fa-bookmark text-primary fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapterXsources&#34;&gt;Де почитати?&lt;/h2&gt;
&lt;p&gt;Книги:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Назва книги&lt;/p&gt;
&lt;p&gt;Сторінки: 1254-1284.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Блоги, статті:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://metanit.com/sharp/tutorial/3.29.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fas fa-link text-primary  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Metanit. Объектно-ориентированное программирование. Практика&lt;/a&gt; (RU)&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Відео-контент:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://metanit.com/sharp/tutorial/3.29.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fab fa-youtube text-danger  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Metanit. Объектно-ориентированное программирование. Практика&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://metanit.com/sharp/tutorial/3.29.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fab fa-microsoft text-primary  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Metanit. Объектно-ориентированное программирование. Практика&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-book text-primary fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapter8sources&#34;&gt;Список використаних джерел&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Albahari, J., &amp;amp; Albahari, B. (2012). C# 5.0 in a Nutshell, Fifth Edition. 1005 Gravenstein Highway North, Sebastopol, USA: O’Reilly Media, Inc.&lt;/li&gt;
&lt;li&gt;Cardelli, L., &amp;amp; Wegner, P. (December 1985 p.). On Understanding Types, Data Abstraction, and Polymorphism. ACM Computing 1. Surveys, 17(4), сс. 149-154. Отримано з &lt;a href=&#34;http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf&#34;&gt;http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kort, W. d. (2013). Exam Ref 70-483: Programming in C#. Sebastopol, California 95472: O’Reilly Media, Inc.&lt;/li&gt;
&lt;li&gt;MSDN. (без дати). Отримано з Microsoft Developer Network: &lt;a href=&#34;http://msdn.microsoft.com/&#34;&gt;http://msdn.microsoft.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Биллиг, А. (2005). Основы программирования на C#. Москва, Россия: НОУ ИНТУИТ.&lt;/li&gt;
&lt;li&gt;Нейгел, К. И. (2011). С# 4.0 и платформа .NET 4 для профессионалов. Москва, Россия: ООО &amp;ldquo;И.Д. Вильямс&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Павловская, Т. (2009). С#. Программирование на языке высокого уровня. Учебник для вузов. СПб, Россия: Питер.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;span style=&#34;float:right&#34;&gt;

  &lt;i class=&#34;fas fa-download fa-2x  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
&lt;h2 id=&#34;chapter8additional&#34;&gt;Додаткові матеріали для завантаження&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;del&gt;Лекція у форматі DOCX &lt;a href=&#34;&#34;&gt;
  &lt;i class=&#34;fas fa-file-word  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Завантажити&lt;/a&gt;&lt;/del&gt; (у розробці)&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Лекція у форматі PDF &lt;a href=&#34;&#34;&gt;
  &lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Завантажити&lt;/a&gt;&lt;/del&gt; (у розробці)&lt;/li&gt;
&lt;li&gt;Діаграми до лекції у форматі &lt;code&gt;
  &lt;i class=&#34;fas fa-project-diagram  pr-1 fa-fw&#34;&gt;&lt;/i&gt;draw.io&lt;/code&gt; на &lt;code&gt;
  &lt;i class=&#34;fab fa-github  pr-1 fa-fw&#34;&gt;&lt;/i&gt;github&lt;/code&gt; &lt;a href=&#34;https://github.com/kleban/csharp-basics-public/tree/master/diagrams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Перейти&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Дорогі друзі, якщо Ви помітили, що для написання матеріалів використані джерела, які я не вказав - прошу надіслати мені інформацію на пошту.
Дякую.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
